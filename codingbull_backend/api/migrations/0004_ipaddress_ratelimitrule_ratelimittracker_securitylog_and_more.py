# Generated by Django 5.2.1 on 2025-05-31 17:45

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0003_blogpost_tags'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='IPAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField(db_index=True, unique=True)),
                ('is_blacklisted', models.BooleanField(db_index=True, default=False)),
                ('is_whitelisted', models.BooleanField(db_index=True, default=False)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('country_code', models.CharField(blank=True, max_length=2, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('region', models.CharField(blank=True, max_length=100, null=True)),
                ('organization', models.CharField(blank=True, max_length=200, null=True)),
                ('isp', models.CharField(blank=True, max_length=200, null=True)),
                ('first_seen', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('last_seen', models.DateTimeField(auto_now=True, db_index=True)),
                ('total_requests', models.PositiveIntegerField(default=0)),
                ('suspicious_requests', models.PositiveIntegerField(default=0)),
                ('blocked_requests', models.PositiveIntegerField(default=0)),
                ('reputation_score', models.PositiveIntegerField(default=50, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'IP Address',
                'verbose_name_plural': 'IP Addresses',
                'ordering': ['-last_seen'],
            },
        ),
        migrations.CreateModel(
            name='RateLimitRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('path_pattern', models.CharField(help_text='Regex pattern for URL paths (e.g., ^/api/v1/.*)', max_length=500)),
                ('max_requests', models.PositiveIntegerField(help_text='Maximum requests allowed')),
                ('time_window', models.PositiveIntegerField(help_text='Time window in seconds')),
                ('block_duration', models.PositiveIntegerField(default=300, help_text='Block duration in seconds after limit exceeded')),
                ('applies_to', models.CharField(choices=[('all', 'All Users'), ('authenticated', 'Authenticated Users'), ('anonymous', 'Anonymous Users'), ('ip', 'Per IP Address')], default='all', max_length=20)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('priority', models.PositiveIntegerField(default=100, help_text='Lower numbers = higher priority')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Rate Limit Rule',
                'verbose_name_plural': 'Rate Limit Rules',
                'ordering': ['priority', 'name'],
            },
        ),
        migrations.CreateModel(
            name='RateLimitTracker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(db_index=True, max_length=255)),
                ('request_count', models.PositiveIntegerField(default=0)),
                ('window_start', models.DateTimeField(auto_now_add=True)),
                ('last_request', models.DateTimeField(auto_now=True)),
                ('is_blocked', models.BooleanField(default=False)),
                ('blocked_until', models.DateTimeField(blank=True, null=True)),
                ('rule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.ratelimitrule')),
            ],
            options={
                'verbose_name': 'Rate Limit Tracker',
                'verbose_name_plural': 'Rate Limit Trackers',
            },
        ),
        migrations.CreateModel(
            name='SecurityLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('method', models.CharField(choices=[('GET', 'GET'), ('POST', 'POST'), ('PUT', 'PUT'), ('PATCH', 'PATCH'), ('DELETE', 'DELETE'), ('HEAD', 'HEAD'), ('OPTIONS', 'OPTIONS'), ('TRACE', 'TRACE')], db_index=True, max_length=10)),
                ('path', models.TextField(db_index=True)),
                ('query_string', models.TextField(blank=True, null=True)),
                ('referer', models.TextField(blank=True, null=True)),
                ('host', models.CharField(blank=True, max_length=255, null=True)),
                ('content_type', models.CharField(blank=True, max_length=100, null=True)),
                ('is_suspicious', models.BooleanField(db_index=True, default=False)),
                ('risk_level', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], db_index=True, default='low', max_length=10)),
                ('risk_score', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('session_key', models.CharField(blank=True, max_length=40, null=True)),
                ('response_status', models.PositiveIntegerField(blank=True, null=True)),
                ('response_time', models.FloatField(blank=True, help_text='Response time in milliseconds', null=True)),
                ('blocked', models.BooleanField(db_index=True, default=False)),
                ('x_forwarded_for', models.TextField(blank=True, null=True)),
                ('x_real_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('x_forwarded_proto', models.CharField(blank=True, max_length=10, null=True)),
                ('matched_rules', models.JSONField(blank=True, default=list)),
                ('threat_indicators', models.JSONField(blank=True, default=list)),
                ('ip_address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='security_logs', to='api.ipaddress')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Security Log',
                'verbose_name_plural': 'Security Logs',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='SecurityAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_type', models.CharField(choices=[('rate_limit', 'Rate Limit Exceeded'), ('suspicious_activity', 'Suspicious Activity'), ('blacklist_match', 'Blacklist Match'), ('high_risk_request', 'High Risk Request'), ('attack_pattern', 'Attack Pattern Detected'), ('system_error', 'System Error')], db_index=True, max_length=30)),
                ('severity', models.CharField(choices=[('info', 'Info'), ('warning', 'Warning'), ('error', 'Error'), ('critical', 'Critical')], db_index=True, default='warning', max_length=10)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('is_acknowledged', models.BooleanField(db_index=True, default=False)),
                ('acknowledged_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('additional_data', models.JSONField(blank=True, default=dict)),
                ('acknowledged_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('ip_address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.ipaddress')),
                ('security_log', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.securitylog')),
            ],
            options={
                'verbose_name': 'Security Alert',
                'verbose_name_plural': 'Security Alerts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserAgent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_agent_string', models.TextField(db_index=True, unique=True)),
                ('user_agent_hash', models.CharField(db_index=True, max_length=64, unique=True)),
                ('browser', models.CharField(blank=True, max_length=100, null=True)),
                ('browser_version', models.CharField(blank=True, max_length=50, null=True)),
                ('os', models.CharField(blank=True, max_length=100, null=True)),
                ('os_version', models.CharField(blank=True, max_length=50, null=True)),
                ('device_type', models.CharField(choices=[('desktop', 'Desktop'), ('mobile', 'Mobile'), ('tablet', 'Tablet'), ('bot', 'Bot'), ('unknown', 'Unknown')], default='unknown', max_length=20)),
                ('is_bot', models.BooleanField(db_index=True, default=False)),
                ('is_suspicious', models.BooleanField(db_index=True, default=False)),
                ('is_mobile', models.BooleanField(default=False)),
                ('first_seen', models.DateTimeField(auto_now_add=True)),
                ('last_seen', models.DateTimeField(auto_now=True)),
                ('request_count', models.PositiveIntegerField(default=0)),
            ],
            options={
                'verbose_name': 'User Agent',
                'verbose_name_plural': 'User Agents',
                'ordering': ['-last_seen'],
                'indexes': [models.Index(fields=['device_type'], name='api_userage_device__97307d_idx'), models.Index(fields=['request_count'], name='api_userage_request_7b83f5_idx')],
            },
        ),
        migrations.AddField(
            model_name='securitylog',
            name='user_agent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='security_logs', to='api.useragent'),
        ),
        migrations.CreateModel(
            name='BlacklistRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rule_type', models.CharField(choices=[('ip', 'IP Address'), ('ip_range', 'IP Range'), ('user_agent', 'User Agent'), ('path', 'URL Path'), ('country', 'Country'), ('referer', 'Referer')], db_index=True, max_length=20)),
                ('pattern', models.TextField(help_text='Pattern to match (supports regex for some types)')),
                ('reason', models.CharField(max_length=200)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('expires_at', models.DateTimeField(blank=True, help_text='Optional expiration time', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('match_count', models.PositiveIntegerField(default=0)),
                ('last_matched', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Blacklist Rule',
                'verbose_name_plural': 'Blacklist Rules',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['rule_type', 'is_active'], name='api_blackli_rule_ty_dfa8fb_idx'), models.Index(fields=['expires_at'], name='api_blackli_expires_fcce5b_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='ipaddress',
            index=models.Index(fields=['reputation_score'], name='api_ipaddre_reputat_70a320_idx'),
        ),
        migrations.AddIndex(
            model_name='ipaddress',
            index=models.Index(fields=['total_requests'], name='api_ipaddre_total_r_6c332d_idx'),
        ),
        migrations.AddIndex(
            model_name='ipaddress',
            index=models.Index(fields=['suspicious_requests'], name='api_ipaddre_suspici_da7206_idx'),
        ),
        migrations.AddIndex(
            model_name='ratelimittracker',
            index=models.Index(fields=['identifier', 'is_blocked'], name='api_ratelim_identif_44f081_idx'),
        ),
        migrations.AddIndex(
            model_name='ratelimittracker',
            index=models.Index(fields=['blocked_until'], name='api_ratelim_blocked_112c85_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='ratelimittracker',
            unique_together={('identifier', 'rule')},
        ),
        migrations.AddIndex(
            model_name='securityalert',
            index=models.Index(fields=['severity', 'is_acknowledged'], name='api_securit_severit_dc3cbe_idx'),
        ),
        migrations.AddIndex(
            model_name='securityalert',
            index=models.Index(fields=['alert_type', 'created_at'], name='api_securit_alert_t_c60a2e_idx'),
        ),
        migrations.AddIndex(
            model_name='securitylog',
            index=models.Index(fields=['timestamp', 'is_suspicious'], name='api_securit_timesta_dd31a4_idx'),
        ),
        migrations.AddIndex(
            model_name='securitylog',
            index=models.Index(fields=['risk_level', 'timestamp'], name='api_securit_risk_le_fd7a57_idx'),
        ),
        migrations.AddIndex(
            model_name='securitylog',
            index=models.Index(fields=['blocked', 'timestamp'], name='api_securit_blocked_2f56e9_idx'),
        ),
        migrations.AddIndex(
            model_name='securitylog',
            index=models.Index(fields=['path'], name='api_securit_path_59e9dc_idx'),
        ),
    ]

# Enterprise Nginx Configuration for CodingBull on Hostinger VPS
# Replaces Cloudflare Pages and Koyeb with native Hostinger VPS deployment
# Place this file at: /etc/nginx/sites-available/codingbull
# Enable with: sudo ln -s /etc/nginx/sites-available/codingbull /etc/nginx/sites-enabled/
#
# This configuration provides:
# - Static file serving (replaces Cloudflare Pages)
# - API reverse proxy (replaces Koyeb backend)
# - React Router support (replaces Cloudflare redirects)
# - Enterprise security headers
# - Performance optimizations

# Rate limiting
limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=general:10m rate=30r/s;

# Upstream for Django backend (Unix socket)
upstream django_backend {
    server unix:/run/gunicorn/codingbull.sock;
}

# Redirect HTTP to HTTPS
server {
    listen 80;
    server_name codingbullz.com www.codingbullz.com api.codingbullz.com;
    return 301 https://$server_name$request_uri;
}

# Main website (Frontend)
server {
    listen 443 ssl http2;
    server_name codingbullz.com www.codingbullz.com;

    # SSL Configuration (Let's Encrypt)
    ssl_certificate /etc/letsencrypt/live/codingbullz.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/codingbullz.com/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Security Headers
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=(), interest-cohort=()" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    # Content Security Policy
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://www.google-analytics.com https://www.googletagmanager.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https: blob:; connect-src 'self' https://api.codingbullz.com https://www.google-analytics.com; frame-ancestors 'none'; base-uri 'self'; form-action 'self';" always;

    # Document root
    root /home/codingbull/codingbull/codingbull-website/build;
    index index.html;

    # Rate limiting
    limit_req zone=general burst=50 nodelay;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Static assets with long cache
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options "nosniff" always;
    }

    # Service worker - no cache
    location /sw.js {
        expires off;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
    }

    # React Router - serve index.html for all routes
    location / {
        try_files $uri $uri/ /index.html;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
    }

    # Security - deny access to sensitive files
    location ~ /\. {
        deny all;
    }

    location ~ \.(env|log|conf)$ {
        deny all;
    }
}

# API Backend (Django)
server {
    listen 443 ssl http2;
    server_name api.codingbullz.com;

    # SSL Configuration (Let's Encrypt)
    ssl_certificate /etc/letsencrypt/live/api.codingbullz.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.codingbullz.com/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Security Headers for API
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    # Rate limiting for API
    limit_req zone=api burst=20 nodelay;

    # Client max body size for file uploads
    client_max_body_size 10M;

    # Proxy to Django backend
    location / {
        proxy_pass http://django_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;

        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
    }

    # Static files served by Nginx
    location /static/ {
        alias /home/codingbull/codingbull/staticfiles/;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Media files served by Nginx
    location /media/ {
        alias /home/codingbull/codingbull/media/;
        expires 30d;
        add_header Cache-Control "public";
    }

    # Health check endpoint
    location /health/ {
        access_log off;
        proxy_pass http://django_backend;
        proxy_set_header Host $host;
    }

    # Security - deny access to sensitive files
    location ~ /\. {
        deny all;
    }

    location ~ \.(env|log|conf)$ {
        deny all;
    }
}
